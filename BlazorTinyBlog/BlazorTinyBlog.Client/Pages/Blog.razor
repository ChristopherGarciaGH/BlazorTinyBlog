@page "/blog"
@inject IBlogPostService BlogPostService
@* @attribute [StreamRendering]*@
@*El componente solo será visible cuanto esté conectado y listo
    para la interacción del usuario, sin mostrar una versión
    estática antes de que la conexión se establezca.
*@
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))

<PageTitle>Blog</PageTitle>
<h3>Blog</h3>

@if (posts.Count == 0)
{
    <p><em>Loading Blog Posts....</em></p>
}
else
{
    <a href="edit-article">Create new article</a>

    @foreach (var post in posts)
    {
        <div>
            <p>@post.Title</p>
            <p>@post.PublisedDate</p>
            <p>@post.Content</p>
            <a href="/article/@post.Id">Read more</a>
        </div>
    }
}

@code {
    List<BlogPost> posts = new List<BlogPost>();

     /*
     * Este metodo inicializa solo una vez para cargar
     * los datos por primera vez, permite realizar operaciones
     * que puedan tomar un tiempo de manera no bloqueante
    */
    protected override async Task OnInitializedAsync()
    {
        posts = await BlogPostService.GetAllPostAsync();
    }
}
